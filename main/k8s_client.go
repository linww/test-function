package main

import (
	"context"
	"encoding/json"
	"github.com/aobco/log"
	"xsky.com/ocpf/pkg/k8s"
)

func main() {
	config := `apiVersion: v1
clusters:
- cluster:
    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJmRENDQVNHZ0F3SUJBZ0lCQURBS0JnZ3Foa2pPUFFRREFqQWtNU0l3SUFZRFZRUUREQmx5YTJVeUxYTmwKY25abGNpMWpZVUF4TnpRMU9EQTJNVGd6TUNBWERUSTFNRFF5T0RBeU1EazBNMW9ZRHpJeE1qVXdOREEwTURJdwpPVFF6V2pBa01TSXdJQVlEVlFRRERCbHlhMlV5TFhObGNuWmxjaTFqWVVBeE56UTFPREEyTVRnek1Ga3dFd1lICktvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVJU282Qzg2WUFwalpnTFpRZ1pVOCtXRWE3b2o0NWwvaklTOGcKNFpleFhvNjJmTlJKR09nL0NCbzhxRDJlS1pONjZVTmtQaHBMZm1WeEc2Z0ZOcnpubUtOQ01FQXdEZ1lEVlIwUApBUUgvQkFRREFnS2tNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGR0FmSG51ZHExUHB1cVNLCmNrS0x2cGVnZ25odk1Bb0dDQ3FHU000OUJBTUNBMGtBTUVZQ0lRRHFYU0duZjZqRlJnYjFWWE1KS3FMRjgvekIKQXVEcm52Z1pmWHcwZklZaTJ3SWhBTnRuc1lFaFQ3R3drYlhpS1U1REVVdXFTWWJjNytLSld3enN3eGZmWjNSRwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    server: https://10.16.64.86:6443
  name: default
contexts:
- context:
    cluster: default
    user: default
  name: default
current-context: default
kind: Config
preferences: {}
users:
- name: default
  user:
    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJsRENDQVRxZ0F3SUJBZ0lJWWtWM2daNjN3Tmd3Q2dZSUtvWkl6ajBFQXdJd0pERWlNQ0FHQTFVRUF3d1oKY210bE1pMWpiR2xsYm5RdFkyRkFNVGMwTlRnd05qRTRNekFnRncweU5UQTBNamd3TWpBNU5ETmFHQTh5TVRJMQpNRFF3TkRBeU1EazBNMW93TURFWE1CVUdBMVVFQ2hNT2MzbHpkR1Z0T20xaGMzUmxjbk14RlRBVEJnTlZCQU1UCkRITjVjM1JsYlRwaFpHMXBiakJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCTGlQTDU1WjFvZFMKZFdtMkh3b1ZMSGdIRzNOemtndHljcmFaL25zMHBIVFMwSEtoRExGRnVKU2FFa0tBbmVCQXUvZEFTaVZGWlR4TQpDeVZwbTNLWFdEbWpTREJHTUE0R0ExVWREd0VCL3dRRUF3SUZvREFUQmdOVkhTVUVEREFLQmdnckJnRUZCUWNECkFqQWZCZ05WSFNNRUdEQVdnQlNyUjJzSDJ3UDlueVJuUCtidWpiZERaVElNVVRBS0JnZ3Foa2pPUFFRREFnTkkKQURCRkFpRUFqbUpBSWdYZ3RJRld5ZGIrTEJMMkhtdGFmRlJhanc3VVp4OUptNHExMkM0Q0lHL3Z6MTFuQ1dNbAp2VVZYckVTd09sVjZUY1M0aEpxeFQveFFscnlZRlROQwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlCZkRDQ0FTR2dBd0lCQWdJQkFEQUtCZ2dxaGtqT1BRUURBakFrTVNJd0lBWURWUVFEREJseWEyVXlMV05zCmFXVnVkQzFqWVVBeE56UTFPREEyTVRnek1DQVhEVEkxTURReU9EQXlNRGswTTFvWUR6SXhNalV3TkRBME1ESXcKT1RReldqQWtNU0l3SUFZRFZRUUREQmx5YTJVeUxXTnNhV1Z1ZEMxallVQXhOelExT0RBMk1UZ3pNRmt3RXdZSApLb1pJemowQ0FRWUlLb1pJemowREFRY0RRZ0FFaHI4ZEV3eURPN05BZEVRTFNTMHJHWEcxSGRUSFcwVklEM2lEClgyWTJ5M0RVR29pWVBUamRZOWZld0Q1UHg0SVFXT2s0YkV6R01OZnR6cEJ1RVZhYS82TkNNRUF3RGdZRFZSMFAKQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkt0SGF3ZmJBLzJmSkdjLwo1dTZOdDBObE1neFJNQW9HQ0NxR1NNNDlCQU1DQTBrQU1FWUNJUURkeTJlbnIwRzgzQ0x5dFYveC8yWFM1Y2FyCko5WGF0blVBVkN3UlpFNWZRQUloQUtTWmpsNldXdTBNNGtxNWlBWUl1ekRneHBSdXpoN0YzcmZSd0RTa0p3MWEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    client-key-data: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUZpMHdndjJ3RlBGQTl4UFZtUWl5VU1HdlRyaHhpaHZEY1ZSd1lrb2JTTjRvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFdUk4dm5sbldoMUoxYWJZZkNoVXNlQWNiYzNPU0MzSnl0cG4rZXpTa2ROTFFjcUVNc1VXNApsSm9TUW9DZDRFQzc5MEJLSlVWbFBFd0xKV21iY3BkWU9RPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=`
	k8s.Init([]byte(config))

	//nodes, err := k8s.K8sClient.ClientSet.CoreV1().Nodes().List(context.TODO(), metav1.ListOptions{})
	//if err != nil {
	//	panic(err.Error())
	//}

	req := k8s.K8sClient.GetClientSet().CoreV1().RESTClient().Get().
		Resource("nodes").
		Name("ocpf02").
		SubResource("proxy").
		Suffix("stats/summary")

	raw, err := req.DoRaw(context.TODO())
	if err != nil {
		log.Fatalf("Failed to get node stats: %v", err)
	}
	type NodeStats struct {
		FS struct {
			AvailableBytes int64 `json:"availableBytes"`
			CapacityBytes  int64 `json:"capacityBytes"`
			UsedBytes      int64 `json:"usedBytes"`
		} `json:"fs"`
	}
	var stats struct {
		Node NodeStats `json:"node"`
	}
	if err := json.Unmarshal(raw, &stats); err != nil {
		log.Fatalf("Failed to unmarshal node stats: %v", err)
	}
	log.Infof("Node stats: %+v", stats.Node)
}
